const ingredients = [
  'Potatoes',
  'Mushrooms',
  'Garlic',
  'Tomatos',
  'Herbs',
  'Condiments',
];  //Масив - структура даних для зберігання і маніпулювання колекцією індексованих значень. 
    //Використовується для зберігання впорядкованих колекцій даних, наприклад, списку курортів, товарів, клієнтів в готелі тощо.

const ulIngredients = document.querySelector('#ingredients'); //знайшли унікальний елемент!

const liItem = ingredients.map((ingredient) => {  //Метод map(callback) використовується для трансформації масиву. 
  const item = document.createElement('li');      //Він викликає колбек-функцію для кожного елемента вихідного масиву, 
  item.textContent = ingredient;                  //а результат її роботи записує у новий масив, який і буде результатом виконання методу.
  item.classList.add('item')                      //Використовуючи метод map(), ми можемо перебрати масив об'єктів, 
  return item;                                    //і в колбек-функції повернути значення властивості кожного з них.
});
ulIngredients.append(...liItem);
//document.createElement(tagName) - cтворює елемент з ім'ям tagName і повертає посилання на нього як результат свого виконання. 
                       //tagName - це рядок, що вказує тип елемента, який створюється. Елемент створюється в пам'яті, в DOM його ще немає.

// У властивості classList зберігається об'єкт з методами для роботи з класами елемента.
//   elem.classList.contains(cls) - повертає true або false, залежно від наявності класу cls в елемента.
//   elem.classList.add(cls) - додає клас cls до списку класів елемента.
//   elem.classList.remove(cls) - видаляє клас cls зі списку класів елемента.
//   elem.classList.toggle(cls) - якщо відсутній клас cls, то додає його, якщо - присутній, навпаки - видаляє.
//   elem.classList.replace(oldClass, newClass) - замінює існуючий клас oldClass на вказаний newClass.

//Операція ... (spread) дозволяє розподілити колекцію елементів (масив, рядок або об'єкт) в місце, в якому очікується набір окремих значень.
//Операція ... (spread) дозволяє створити копію масиву або «склеїти» довільну кількість масивів в один новий. 

// Операція ... (rest) дозволяє зібрати групу незалежних елементів у нову колекцію. 
// Синтаксично - це близнюк операції розподілу, але відрізнити їх просто - 
// розподіл - коли ... знаходиться у правій частині операції присвоювання, а збирання - коли ... знаходиться в її лівій частині.

// Метод Element.append() вставляє набір об'єктів Node чи рядкових об'єктів після останнього дочірнього елемента Element. 
// Рядкові об'єкти вставляються як еквівалентні текстові вузли.